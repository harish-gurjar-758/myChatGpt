import type { Multi, Ignore, Fn, Result } from "./types";
/**
 * If a function is provided executes the function and ignores some errors. If no function is provided returns a catch function.
 *
 * @param attribute is the error attribute to ignore some values.
 * @param ignore is the values to ignore when thrown error's attribute matches.
 * @param defaultOrFn default value if error is ignored or function to execute.
 * @param maybeFn function to execute or undefined.
 * @returns catch function, default value or undefined.
 * @throws error if thrown error does not match ignored ones.
 */
export declare function ignoreAttribute<D, R>(attribute: string, ignore?: Multi<Ignore>, defaultOrFn?: D | Fn<R>, maybeFn?: Fn<R>): Result<D, R>;
//# sourceMappingURL=ignorer.d.ts.map